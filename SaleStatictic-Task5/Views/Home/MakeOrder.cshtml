@model SaleStatictic_Task5.Models.OrderViewModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>OrderView</h4>
        <hr />
        <div class="form-group">
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date)
                    @Html.ValidationMessageFor(model => model.Date)
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                <select id="products">
                    <option disabled>Выберите товар</option>
                    </select>
                <script type="text/javascript">
                    $(function(){
                        $.getJSON('@Url.Action("GetProducts", "Home")', null,
                            function (result) {
                                for (var i = 0; i < result.Products.length;i++){
                                    $.each(result.Products.append('<option value="'
                                        + result.Products[i].id + '">'
                                        + result.Products[i].ProductName + '</option>'));
                            }
                        });
                    });
                </script>
                
                
                @*$.getJSON('@Url.Action("GetProducts", "Home")', null,
                function (result) {
                if (result.Products.length) {
                $.each(result.Products, function (index, c) {
                data.addRow(
                [c.ProductName, c.ProductCost]
                );
                });*@
                

                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManagerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManagerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManagerName, "", new { @class = "text-danger" })
            </div>
        </div>
        @using (Ajax.BeginForm("MakeOrder", new AjaxOptions { UpdateTargetId = "makeOrder" }))
        {<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
            }
        
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}